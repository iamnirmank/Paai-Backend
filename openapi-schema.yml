openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/chatmate/api/document/{id}/get_documents/:
    get:
      operationId: getDocumentsDocument
      description: Retrieve all documents associated with the specified room name.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
      tags:
      - api
  /api/chatmate/api/query/{id}/get_queries_by_room_id/:
    get:
      operationId: getQueriesByRoomIdQuery
      description: Retrieve all queries associated with a specific room.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Query'
          description: ''
      tags:
      - api
  /api/chatmate/api/rooms/get_rooms/:
    get:
      operationId: getRoomsRooms
      description: Retrieve all rooms associated with the authenticated user.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rooms'
          description: ''
      tags:
      - api
  /api/auth/api/user/{id}/verify_url/:
    get:
      operationId: verifyUrlUser
      description: Verifies a user's email using a verification URL.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/auth/api/feedback/get_feedbacks/:
    get:
      operationId: getFeedbacksFeedback
      description: Retrieves all feedback for the authenticated user.
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
          description: ''
      tags:
      - api
  /api/auth/api/feedback/test/:
    get:
      operationId: testFeedback
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
          description: ''
      tags:
      - api
  /api/chatmate/api/document/upload_file/:
    post:
      operationId: uploadFileDocument
      description: Upload a new document to the specified room.
      parameters: []
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Document'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Document'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
      tags:
      - api
  /api/chatmate/api/query/process_chat/:
    post:
      operationId: processChatQuery
      description: Process a chat query and generate a response.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Query'
          description: ''
      tags:
      - api
  /api/chatmate/api/rooms/create_room/:
    post:
      operationId: createRoomRooms
      description: Create a new room and associate it with a user.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rooms'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rooms'
          description: ''
      tags:
      - api
  /api/auth/api/user/forget_password/:
    post:
      operationId: forgetPasswordUser
      description: Sends a password reset email to the user.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/auth/api/user/login/:
    post:
      operationId: loginUser
      description: Authenticates a user and returns JWT tokens.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/auth/api/user/register/:
    post:
      operationId: registerUser
      description: Registers a new user and sends a verification URL.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/auth/api/user/reset_password/:
    post:
      operationId: resetPasswordUser
      description: Resets the user's password using a reset token.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/auth/api/user/verify_email/:
    post:
      operationId: verifyEmailUser
      description: Verifies a user's email using a verification code.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
  /api/auth/api/feedback/create_feedback/:
    post:
      operationId: createFeedbackFeedback
      description: Creates new feedback from the authenticated user.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Feedback'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Feedback'
          description: ''
      tags:
      - api
  /api/chatmate/api/document/{id}/update_document/:
    put:
      operationId: updateDocumentDocument
      description: Update the document based on the provided document ID.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Document'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Document'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Document'
          description: ''
      tags:
      - api
  /api/chatmate/api/query/{id}/edit_query/:
    put:
      operationId: editQueryQuery
      description: Edit an existing query by its ID.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Query'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Query'
          description: ''
      tags:
      - api
  /api/chatmate/api/rooms/{id}/update_room/:
    put:
      operationId: updateRoomRooms
      description: Update a room's information such as name and associated user.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Rooms'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Rooms'
          description: ''
      tags:
      - api
  /api/chatmate/api/document/{id}/delete_document/:
    delete:
      operationId: deleteDocumentDocument
      description: Delete the document based on the provided document ID.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/chatmate/api/rooms/{id}/delete_room/:
    delete:
      operationId: deleteRoomRooms
      description: Delete a room along with its associated documents and queries.
      parameters:
      - name: id
        in: path
        required: true
        description: ''
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
components:
  schemas:
    Document:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        file:
          type: string
          format: binary
          nullable: true
        link:
          type: string
          format: uri
          nullable: true
          maxLength: 200
          pattern: "^(?:[a-z0-9.+-]*)://(?:[^\\s:@/]+(?::[^\\s:@/]*)?@)?(?:(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)(?:\\\
            .(?:0|25[0-5]|2[0-4][0-9]|1[0-9]?[0-9]?|[1-9][0-9]?)){3}|\\[[0-9a-f:.]+\\\
            ]|([a-z\xA1-\uFFFF0-9](?:[a-z\xA1-\uFFFF0-9-]{0,61}[a-z\xA1-\uFFFF0-9])?(?:\\\
            .(?!-)[a-z\xA1-\uFFFF0-9-]{1,63}(?<!-))*\\.(?!-)(?:[a-z\xA1-\uFFFF-]{2,63}|xn--[a-z0-9]{1,59})(?<!-)\\\
            .?|localhost))(?::[0-9]{1,5})?(?:[/?#][^\\s]*)?\\z"
        uploaded_at:
          type: string
          format: date-time
          readOnly: true
        room:
          type: string
      required:
      - title
      - room
    Query:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        query_text:
          type: string
        response_text:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        room:
          type: string
      required:
      - query_text
      - response_text
      - room
    Rooms:
      type: object
      properties:
        id:
          type: string
          readOnly: true
        name:
          type: string
          maxLength: 255
        created_at:
          type: string
          format: date-time
          readOnly: true
        updated_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: integer
      required:
      - name
      - user
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        password:
          type: string
          maxLength: 128
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          description: Designates that this user has all permissions without explicitly
            assigning them.
        full_name:
          type: string
          maxLength: 255
        email:
          type: string
          format: email
          maxLength: 254
        verification_code:
          type: string
          nullable: true
          maxLength: 6
        is_verified:
          type: boolean
        is_staff:
          type: boolean
        password_reset_token:
          type: string
          nullable: true
          maxLength: 32
        password_reset_token_created_at:
          type: string
          format: date-time
          nullable: true
        groups:
          type: array
          items:
            type: integer
          description: The groups this user belongs to. A user will get all permissions
            granted to each of their groups.
        user_permissions:
          type: array
          items:
            type: integer
          description: Specific permissions for this user.
      required:
      - password
      - full_name
      - email
    Feedback:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        agree_to_pay:
          type: boolean
        feedback:
          type: string
        created_at:
          type: string
          format: date-time
          readOnly: true
        user:
          type: string
      required:
      - feedback
      - user
